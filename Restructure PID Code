#include <stdio.h>
#include <time.h>

extern "C" int init(int d_lev);
extern "C" int Sleep(int sec, int usec);
extern "C" int set_motor(int motor, int speed);
extern "C" int take_picture();
extern "C" char get_pixel(int row, int col, int colour);

extern "C" int connect_to_server( char server_addr[15],int port);
extern "C" int send_to_server(char message[24]);
extern "C" int receive_from_server(char message[24]);

#define ELEMENTS 320

int main(){
    init(0);

    int i;
    int reading;
    float pConstant = 0.5;					//Kp
    float dConstant = 0.8;					//Kd
    int errorPeriod = 5000;
    int motorConstant = 40;
    int blackWhite;
    int nwp;
	 int error;

    int camArray[ELEMENTS];
    int errorArray[ELEMENTS];

    int errorSum = 0;
    int pSignal;
    int currentError = 0;
    int previousError = 0;
    int dSignal;
    int signalPID;

    int leftMotor;
    int rightMotor;

   connect_to_server("130.195.6.196", 1024);
   send_to_server("Please");
   char message[24];
   receive_from_server(message);
   printf("%s", message);
   Sleep(2,0);

while(true){
	
	take_picture();
	nwp = 1;
	error = 0;
	for (i=0, i<320, i++){
	blackWhite = 0;
	reading = get_pixel(i, 40, 3);	
		if(reading > 128){blackWhite = 1; nwp++;}
		error = (i-160)*blackWhite;
		currentError = currentError + error;
		}

pSignal = (error/nwp)*pConstant;
printf("Proportional signal is: %d", pSignal );

	if(nwp = 0){
	set_motor(1, -(motorConstant));
	set_motor(2, motorConstant);
	}
	else{
		if(currentError < 0){
		set_motor(1, -(pSignal));
		set_motor(2, pSignal);
		}
		else if(currentError > 0){
		set_motor(1, pSignal);
		set_motor(2, -(pSignal));
		}
	}
	}

}
return 0;
}
